name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build, Tag, and Push Docker Images for Multiple Services
      - name: Build and Push Images
        env:
          ECR_URI: 038462756869.dkr.ecr.us-east-1.amazonaws.com/enpm818n-finalproject-g3
        run: |
          SERVICES="accountingservice adservice cartservice checkoutservice currencyservice emailservice flagd frauddetectionservice frontend frontendproxy grafana imageprovider jaeger kafka loadgenerator otelcol paymentservice productcatalogservice prometheus-server quoteservice recommendationservice shippingservice valkey"

          for SERVICE in $SERVICES; do
            echo "Building and pushing $SERVICE"
            IMAGE_URI=${ECR_URI}/${SERVICE}:latest

            # Build the image
            docker build -t $IMAGE_URI ./${SERVICE}

            # Push the image
            docker push $IMAGE_URI
          done

      # Step 5: Deploy to Kubernetes for Multiple Services
      - name: Deploy to Kubernetes
        env:
          ECR_URI: 038462756869.dkr.ecr.us-east-1.amazonaws.com/enpm818n-finalproject-g3
        run: |

          
            echo "Deploying $SERVICE"
            kubectl apply -f kubernetes/Deployment/

            # Verify Deployment
            kubectl rollout status deployment/ || kubectl rollout undo deployment/
          done
